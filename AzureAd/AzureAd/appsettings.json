{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AzureAd": {
    "Instance": "https://login.microsoftonline.com/32cb5add-5aee-4fa6-9230-04ab67ef29cb",
    "Domain": "core-eng.com",
    "TenantId": "32cb5add-5aee-4fa6-9230-04ab67ef29cb",
    "ClientId": "3a3e5e51-1192-41cc-9904-04beda0f7d75",
    "CallbackPath": "/signin-oidc",
    "BaseUrl": "http://localhost:55328/"
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "UserDatabase": "Server=(localdb)\\mssqllocaldb;Database=Intranet;Trusted_Connection=True;MultipleActiveResultSets=true;"
  }
}

// was getting 500 error and also "Unexpected token S in JSON at position 0" when I add [Authorize] to controller and I was not getting anything from the backend even when I added headers: Authorization: "Bearer {token}".  

//https://stackoverflow.com/questions/50742248/idx20803-unable-to-obtain-configuration-from
//reason for the error is that it is trying to download the OpenId configuration document from {instance}{tenantid}/.well-known/openid-configuration, so like https://login.microsoftonline.com/common/.well-known/openid-configuration. This document contains the URL where token signing public keys can be acquired from, among other things. The authentication handler loads this at startup to load up its config for validating tokens provided by the identity provider. So with Azure AD, you must use the Azure AD instance's URL + your tenant id (or "common" for multi-tenant).
//But since you provided another URL/URI, it of course was unable to find the metadata document and crashed. 

// So in AzureAd, I added the TenantId next to Instance and it started to work